======================
FOBOCI_bis Module
======================

Perform all the singles on (CAS+LMCT)

1) Set the different MO classes using the ``qp_set_mo_class`` command

Documentation
=============

.. Do not edit this section. It was auto-generated from the
.. by the `update_README.py` script.

`full_ci <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/cas_sd_selected.irp.f#L1>`_
  Undocumented


`h_apply_cas_sd <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L414>`_
  Calls H_apply on the HF determinant and selects all connected single and double
  excitations (of the same symmetry). Auto-generated by the ``generate_h_apply`` script.


`h_apply_cas_sd_diexc <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L1>`_
  Generate all double excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_cas_sd_monoexc <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L269>`_
  Generate all single excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_cas_sd_pt2 <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L2610>`_
  Calls H_apply on the HF determinant and selects all connected single and double
  excitations (of the same symmetry). Auto-generated by the ``generate_h_apply`` script.


`h_apply_cas_sd_pt2_diexc <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L2118>`_
  Generate all double excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_cas_sd_pt2_monoexc <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L2427>`_
  Generate all single excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_cas_sd_selected <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L1872>`_
  Calls H_apply on the HF determinant and selects all connected single and double
  excitations (of the same symmetry). Auto-generated by the ``generate_h_apply`` script.


`h_apply_cas_sd_selected_diexc <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L1346>`_
  Generate all double excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_cas_sd_selected_monoexc <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L1675>`_
  Generate all single excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_cas_sd_selected_no_skip <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L1128>`_
  Calls H_apply on the HF determinant and selects all connected single and double
  excitations (of the same symmetry). Auto-generated by the ``generate_h_apply`` script.


`h_apply_cas_sd_selected_no_skip_diexc <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L602>`_
  Generate all double excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_cas_sd_selected_no_skip_monoexc <http://github.com/LCPQ/quantum_package/tree/master/src/CAS_SD/H_apply.irp.f_shell_22#L931>`_
  Generate all single excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.

Needed Modules
==============

.. Do not edit this section. It was auto-generated from the
.. by the `update_README.py` script.

.. image:: tree_dependency.png

* `Perturbation <http://github.com/LCPQ/quantum_package/tree/master/src/Perturbation>`_
* `Selectors_full <http://github.com/LCPQ/quantum_package/tree/master/src/Selectors_full>`_
* `Generators_CAS <http://github.com/LCPQ/quantum_package/tree/master/src/Generators_CAS>`_

Needed Modules
==============
.. Do not edit this section It was auto-generated
.. by the `update_README.py` script.


.. image:: tree_dependency.png

* `Perturbation <http://github.com/LCPQ/quantum_package/tree/master/plugins/Perturbation>`_
* `Generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/Generators_restart>`_
* `Properties <http://github.com/LCPQ/quantum_package/tree/master/plugins/Properties>`_
* `Selectors_no_sorted <http://github.com/LCPQ/quantum_package/tree/master/plugins/Selectors_no_sorted>`_

Documentation
=============
.. Do not edit this section It was auto-generated
.. by the `update_README.py` script.


`all_single <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/all_singles.irp.f#L1>`_
  Undocumented


`all_single_h_core <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/all_singles.irp.f#L77>`_
  Undocumented


`check_symetry <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L685>`_
  Undocumented


`collect_lmct <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/collect_all_lmct.irp.f#L3>`_
  Collect all the couple holes/particles of the important LMCT
  hole_particle(i,1) = ith hole
  hole_particle(i,2) = ith particle
  n_couples is the number of important excitations


`collect_lmct_mlct <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/collect_all_lmct.irp.f#L75>`_
  Collect all the couple holes/particles of the important LMCT
  hole_particle(i,1) = ith hole
  hole_particle(i,2) = ith particle
  n_couples is the number of important excitations


`collect_mlct <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/collect_all_lmct.irp.f#L39>`_
  Collect all the couple holes/particles of the important LMCT
  hole_particle(i,1) = ith hole
  hole_particle(i,2) = ith particle
  n_couples is the number of important excitations


`create_restart_and_1h <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/create_1h_or_1p.irp.f#L1>`_
  Undocumented


`create_restart_and_1p <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/create_1h_or_1p.irp.f#L74>`_
  Undocumented


`do_it_perturbative <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/ezfio_interface.irp.f#L6>`_
  if true, you do the FOBOCI calculation perturbatively


`dress_h_matrix_from_psi_det_input <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/dress_simple.irp.f#L110>`_
  Undocumented


`foboci_lmct <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/foboci_lmct_mlct_threshold.irp.f#L202>`_
  Undocumented


`foboci_lmct_mlct <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/foboci_lmct_mlct_threshold.irp.f#L2>`_
  Undocumented


`foboci_lmct_mlct_old_thr <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/foboci_lmct_mlct_threshold_old.irp.f#L2>`_
  Undocumented


`foboci_lmct_old <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/foboci_lmct_mlct_threshold_old.irp.f#L221>`_
  Undocumented


`foboci_mlct <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/foboci_lmct_mlct_threshold.irp.f#L128>`_
  Undocumented


`foboci_mlct_old <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/foboci_lmct_mlct_threshold_old.irp.f#L147>`_
  Undocumented


`foboci_test <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/foboci_lmct_mlct_threshold_old_test.irp.f#L2>`_
  Undocumented


`give_effective_energies <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/effective_contributions.irp.f#L1>`_
  You enter with n_det_cas determinants belonging to the CAS
  and n_det_1h determinants being 1h excitations
  where an electron has been excited from the i_hole_ref orbital
  Then, you compute the effective energies due to the interaction
  of these determinants with a special class of 2h-1p determinants :
  |mu> = a^+_{v,sigma} a_{i,sigma} a^+_{SOMO,beta} a_{j,beta} |Ref_dets>
  where 'v' belongs to the virtual orbitals, 'i' to the inactive orbitals
  SOMO to the active orbitals, 'j' to the inactive orbitals BUT DIFFERENT FROM THE i_hole_ref
  Then, one compute simply the effective energies :
  effective_energies_ref(k)  = sum_{mu} (<mu|H|det_ref(k)>)^2 / (E_ref - <mu|H|mu>)
  effective_energies_hole(k) = sum_{mu} (<mu|H|det_hole(k)>)^2 / (E_ref - <mu|H|mu>)
  This is used in the Davidson diagonalization for taking into account this class of mu


`give_effective_energies_for_all_wf <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/effective_contributions.irp.f#L152>`_
  You enter with n_det_cas determinants belonging to the CAS
  and n_det_1h determinants being 1h excitations
  where an electron has been excited from the i_hole_ref orbital
  Then, you compute the effective energies due to the interaction
  of these determinants with a special class of 2h-1p determinants :
  |mu> = a^+_{v,sigma} a_{i,sigma} a^+_{SOMO,beta} a_{j,beta} |Ref_dets>
  where 'v' belongs to the virtual orbitals, 'i' to the inactive orbitals
  SOMO to the active orbitals, 'j' to the inactive orbitals BUT DIFFERENT FROM THE i_hole_ref
  Then, one compute simply the effective energies :
  effective_energies(k) = sum_{mu} (<mu|H|psi_det(k)>)^2 / (E_ref - <mu|H|mu>)
  This is used in the Davidson diagonalization for taking into account this class of mu


`h_apply_dressed_pert <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply_dressed_autonom.irp.f#L433>`_
  Calls H_apply on the HF determinant and selects all connected single and double
  excitations (of the same symmetry). Auto-generated by the ``generate_h_apply`` script.


`h_apply_dressed_pert_diexc <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply_dressed_autonom.irp.f#L1>`_
  Generate all double excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_dressed_pert_monoexc <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply_dressed_autonom.irp.f#L276>`_
  Generate all single excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_h_core_just_mono <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply.irp.f_shell_25#L1353>`_
  Calls H_apply on the HF determinant and selects all connected single and double
  excitations (of the same symmetry). Auto-generated by the ``generate_h_apply`` script.


`h_apply_h_core_just_mono_diexc <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply.irp.f_shell_25#L786>`_
  Generate all double excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_h_core_just_mono_monoexc <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply.irp.f_shell_25#L1136>`_
  Generate all single excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_just_mono <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply.irp.f_shell_25#L568>`_
  Calls H_apply on the HF determinant and selects all connected single and double
  excitations (of the same symmetry). Auto-generated by the ``generate_h_apply`` script.


`h_apply_just_mono_diexc <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply.irp.f_shell_25#L1>`_
  Generate all double excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_just_mono_monoexc <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply.irp.f_shell_25#L351>`_
  Generate all single excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_just_mono_no_double_hole_pt2 <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply.irp.f_shell_25#L2106>`_
  Calls H_apply on the HF determinant and selects all connected single and double
  excitations (of the same symmetry). Auto-generated by the ``generate_h_apply`` script.


`h_apply_just_mono_no_double_hole_pt2_diexc <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply.irp.f_shell_25#L1571>`_
  Generate all double excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`h_apply_just_mono_no_double_hole_pt2_monoexc <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_apply.irp.f_shell_25#L1901>`_
  Generate all single excitations of key_in using the bit masks of holes and
  particles.
  Assume N_int is already provided.


`i_hole_osoci <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/i_hole.irp.f#L1>`_
  Undocumented


`index_1h_det <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/determinants_specials.irp.f#L40>`_
  Index of the various determinants belonging to the 1h class


`index_cas_det <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/determinants_specials.irp.f#L2>`_
  Index of the various CAS determinants in the wave function


`initialize_density_matrix_osoci <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L502>`_
  Undocumented


`is_a_good_candidate <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/dress_simple.irp.f#L64>`_
  Undocumented


`n_det_1h <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/determinants_specials.irp.f#L19>`_
  Number of determinants that belongs to the 1h class


`n_det_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/generators_restart_save.irp.f#L3>`_
  Number of determinants in the wave function


`norm_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/density_matrix.irp.f#L3>`_
  Alpha and beta one-body density matrix for the generators restart


`one_body_dm_mo_alpha_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/density_matrix.irp.f#L1>`_
  Alpha and beta one-body density matrix for the generators restart


`one_body_dm_mo_alpha_osoci <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/density_matrix.irp.f#L118>`_
  Alpha and beta one-body density matrix that will be used for the OSOCI approach


`one_body_dm_mo_beta_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/density_matrix.irp.f#L2>`_
  Alpha and beta one-body density matrix for the generators restart


`one_body_dm_mo_beta_osoci <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/density_matrix.irp.f#L119>`_
  Alpha and beta one-body density matrix that will be used for the OSOCI approach


`one_body_dm_mo_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/density_matrix.irp.f#L101>`_
  One-body density matrix for the generators_restart


`one_body_spin_density_mo_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/density_matrix.irp.f#L109>`_
  rho(alpha) - rho(beta)


`osoci_dressed_density <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/H_effective_osoci.irp.f#L1>`_
  Undocumented


`osoci_program <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/test.irp.f#L1>`_
  Undocumented


`osoci_undressed_density <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/standard_osoci.irp.f#L1>`_
  Undocumented


`provide_all_the_rest <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/test.irp.f#L8>`_
  Undocumented


`provide_properties <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L721>`_
  Undocumented


`psi_coef_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/generators_restart_save.irp.f#L79>`_
  The wave function coefficients. Initialized with Hartree-Fock if the EZFIO file
  is empty


`psi_det_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/generators_restart_save.irp.f#L29>`_
  The wave function determinants. Initialized with Hartree-Fock if the EZFIO file
  is empty


`ref_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/generators_restart_save.irp.f#L30>`_
  The wave function determinants. Initialized with Hartree-Fock if the EZFIO file
  is empty


`rescale_density_matrix_osoci <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L508>`_
  Undocumented


`routine_1 <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/test_sd.irp.f#L10>`_
  Undocumented


`routine_2 <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/test_sd.irp.f#L25>`_
  Undocumented


`save_osoci_natural_mos <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L527>`_
  Set natural orbitals, obtained by diagonalization of the one-body density matrix in the MO basis


`set_generators_to_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/modify_generators.irp.f#L57>`_
  subroutines that sets psi_det_generators to
  the current psi_det


`set_generators_to_psi_det <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/modify_generators.irp.f#L1>`_
  subroutines that sets psi_det_generators to
  the current psi_det


`set_intermediate_normalization <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L1>`_
  Undocumented


`set_intermediate_normalization_1h1p <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L739>`_
  Undocumented


`set_intermediate_normalization_lmct <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L92>`_
  Undocumented


`set_intermediate_normalization_lmct_old <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L182>`_
  Undocumented


`set_intermediate_normalization_mlct <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L277>`_
  Undocumented


`set_intermediate_normalization_mlct_old <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L375>`_
  Undocumented


`set_lmct_mlct_to_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/collect_all_lmct.irp.f#L233>`_
  Undocumented


`set_lmct_mlct_to_psi_det <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/collect_all_lmct.irp.f#L285>`_
  Undocumented


`set_lmct_to_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/collect_all_lmct.irp.f#L121>`_
  Undocumented


`set_mlct_to_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/collect_all_lmct.irp.f#L177>`_
  Undocumented


`set_psi_det_to_generators <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/modify_generators.irp.f#L24>`_
  subroutines that sets psi_det_generators to
  the current psi_det


`set_psi_det_to_generators_restart <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/modify_generators.irp.f#L80>`_
  subroutines that sets psi_det_generators to
  the current psi_det


`standard_dress <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/dress_simple.irp.f#L2>`_
  Undocumented


`test_sd <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/test_sd.irp.f#L1>`_
  Undocumented


`threshold_singles <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/ezfio_interface.irp.f#L28>`_
  threshold to select the pertinent single excitations at second order


`update_density_matrix_osoci <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L479>`_
  one_body_dm_mo_alpha_osoci =! one_body_dm_mo_alpha_osoci +( Delta rho alpha)
  one_body_dm_mo_beta_osoci  =! one_body_dm_mo_beta_osoci  +( Delta rho beta)


`update_one_body_dm_mo <http://github.com/LCPQ/quantum_package/tree/master/plugins/FOBOCI_bis/routines_foboci.irp.f#L704>`_
  Undocumented

